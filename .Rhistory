hist?
?hist
library('ggplot')
library('ggplot2')
ggplot(Wage$maritl)
ggplot(Wage$maritl, aes(x = factor(cyl)))
ggplot(as.data.frame(Wage$maritl), aes(x = factor(cyl)))
ggplot(as.data.frame(Wage$maritl))
df <- as.data.frame(Wage$maritl)
df
View(df)
View(df)
type(Wage)
class(Wage)
ggplot(df, aes(x = factor(cyl))) + geom_bar()
ggplot(Wage, aes(x = factor(cyl))) + geom_bar()
ggplot(df) + geom_bar()
barplot(Wage$age)
hist(Wage$age)
barplot(table(Wage$maritl))
variable.names(Wage)
table(Wage$race)
barplot(table(Wage$race))
table(Wage$education)
barplot(table(Wage$education))
barplot(table(Wage$region))
table(Wage$region)
barplot(table(Wage$region))
table(Wage$region)
variable.names(Wage)
class(Wage$jobclass)
table(Wage$jobclass)
barplot(table(Wage$jobclass))
table(Wage$jobclass)
class(Wage$health)
table(Wage$health)
barplot(table(Wage$health))
table(Wage$health)
variable.names(Wage)
str(Wage)
table(Wage$wage)
hist(Wage$wage)
table(Wage$wage)
hist(Wage$wage)
table(Wage$logwage)
hist(Wage$logwage)
hist(Wage$wage)
hist(Wage$logwage)
source('~/Master en Data Science y Big Data - AFI/Estadística descriptiva/descriptive_statistics/exercise_1.R', encoding = 'UTF-8')
hist(Wage$wage)
hist(Wage$logwage)
table(Wage$education)
barplot(table(Wage$education))
table(Wage$year)
prop.table(table(Wage$year))
hist(Wage$year)
numeric_cols = sapply(Wage, is.numeric)
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = mean, na.rm = T)
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = median, na.rm = T)
# DEscriptive statistics
summary(Wage)
# DEscriptive statistics
summary(Wage)
#Cuantiles
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = quantile, na.rm = T)
#Medidas de dispersión
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = IQR, na.rm = T)
#varianza
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = var, na.rm = T)
#desviación típica
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = std, na.rm = T)
#desviación típica
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = st, na.rm = T)
#desviación típica
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = sd, na.rm = T)
#varianza
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = var, na.rm = T)
#desviación típica
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = sd, na.rm = T)
source('~/Master en Data Science y Big Data - AFI/Estadística descriptiva/descriptive_statistics/exercise_1.R', encoding = 'UTF-8')
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = skewness, na.rm = T)
#Estadisticos de forma
library(e1071)
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = skewness, na.rm = T)
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = kurtosis, na.rm = T)
hist(Wage$wage)
source('~/Master en Data Science y Big Data - AFI/Estadística descriptiva/descriptive_statistics/exercise_1.R', encoding = 'UTF-8')
library("ISLR")
library('ggplot2')
#El dataset contiene 11 variables. A continuación una pequeña muestra:
head(Wage)
#Análisis descriptivo
#Para comprobar que a cada variable en el dataset le fue asignado el tipo correcto
str(Wage)
#Frequency tables and bar charts
table(Wage$year)
prop.table(table(Wage$year))
hist(Wage$year)
table(Wage$age)
hist(Wage$age)
table(Wage$maritl)
barplot(table(Wage$maritl))
table(Wage$race)
barplot(table(Wage$race))
table(Wage$education)
barplot(table(Wage$education))
table(Wage$region)
table(Wage$jobclass)
table(Wage$health)
table(Wage$education)
barplot(table(Wage$education))
hist(Wage$wage)
hist(Wage$logwage)
# Descriptive statistics
summary(Wage)
#Estadísticos de posición
numeric_cols = sapply(Wage, is.numeric)
#Media
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = mean, na.rm = T)
#Mediana
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = median, na.rm = T)
#Cuantiles
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = quantile(), na.rm = T)
#rango intercuartilico muetsral RI
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = IQR, na.rm = T)
#rango intercuartilico muetsral RI
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = IQR, na.rm = T)
#rango intercuartilico muetsral RI
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = IQR, na.rm = T)
#Cuantiles
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = quantile(), na.rm = T)
#Cuantiles
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = quantile, na.rm = T)
#Cuantiles
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = quantile, na.rm = T)
#rango intercuartilico muetsral RI
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = IQR, na.rm = T)
#varianza
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = var, na.rm = T)
#desviación típica
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = sd, na.rm = T)
#Estadisticos de forma
library(e1071)
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = skewness, na.rm = T)
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = kurtosis, na.rm = T)
# linear regression model
library(dplyr)
pairs(Wage, col = 'red')
pairs(Wage[, numeric_cols], col = 'red')
Wage$age
hist(Wage$age)
unique(Wage$age)
sort(unique(Wage$age))
pairs(Wage[, numeric_cols], col = 'red')
column.names(Wage)
colnames(Wage)
pairs(Wage['age', 'maritl'], col = 'red')
pairs(Wage['age', 'maritl'], col = 'red')
pairs(Wage[['age', 'maritl']], col = 'red')
pairs(Wage[['age', 'maritl']], col = 'red')
Wage[['age', 'maritl']]
Wage['age', 'maritl']
Wage['age', 'maritl']
Wage[c('age', 'maritl')]
pairs(Wage[c('age', 'maritl')], col = 'red')
Wage$maritl
colnames(Wage)
pairs(Wage, col = 'red')
Wage$jobclass
Wage$region
unique(Wage$region)
pairs(Wage[~c(''region)], col = 'red')
pairs(Wage[~c('region')], col = 'red')
pairs(Wage[-6], col = 'red')
colnames(Wage)
cls
View(df)
pairs(Wage[-6], col = 'red')
library("ISLR")
library('ggplot2')
#El dataset contiene 11 variables. A continuación una pequeña muestra:
head(Wage)
#Análisis descriptivo
#Para comprobar que a cada variable en el dataset le fue asignado el tipo correcto
str(Wage)
#Frequency tables and bar charts
table(Wage$year)
prop.table(table(Wage$year))
hist(Wage$year)
table(Wage$age)
hist(Wage$age)
table(Wage$maritl)
barplot(table(Wage$maritl))
table(Wage$race)
barplot(table(Wage$race))
table(Wage$education)
barplot(table(Wage$education))
table(Wage$region)
table(Wage$jobclass)
table(Wage$health)
table(Wage$education)
barplot(table(Wage$education))
hist(Wage$wage)
hist(Wage$logwage)
# Descriptive statistics
summary(Wage)
#Estadísticos de posición
numeric_cols = sapply(Wage, is.numeric)
#Media
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = mean, na.rm = T)
#Mediana
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = median, na.rm = T)
#Cuantiles
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = quantile, na.rm = T)
#rango intercuartilico muetsral RI
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = IQR, na.rm = T)
#varianza
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = var, na.rm = T)
#desviación típica
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = sd, na.rm = T)
#Estadisticos de forma
library(e1071)
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = skewness, na.rm = T)
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = kurtosis, na.rm = T)
# linear regression model
library(dplyr)
unique(Wage$region) #como existe una sola región lo quitamos porque no nos va a dar mucha información
pairs(Wage[-6], col = 'red')
pairs(Wage[c('age', 'maritl')], col = 'red')
pairs(Wage[-6], col = 'red')
Wage$education
Wage$health
colnames(Wage)
lm <- lm(logwage ~ age + jobclass + race + health_ins)
lm <- lm(logwage ~ age + jobclass + race + health_ins, Wage)
lm <- lm(logwage ~ age + jobclass + race + health_ins, data=Wage)
lm
lm_logwage <- lm(logwage ~ age + jobclass + race + health_ins, data=Wage)
lm_logwage
Wage$jobclass
lm_logwage
Wage$race
lm_logwage
print(lm_logwage)
lm_logwage
summary(lm_logwage)
names(lm_logwage)
cass(lm_logwage)
class(lm_logwage)
type(lm_logwage)
tstrype(lm_logwage)
str(lm_logwage)
confint(lm_logwage, level = 0.95)
summary(lm_logwage)
confint(lm_logwage, level = 0.95)
plot(Wage$logwage, lm_logwage$residuals, type = 'p', col = 'red', xlab = 'TV', ylab = 'Sales')
lm_logwage$residuals
row_number(Wage)
length(Wage)
length(lm_logwage$residuals)
nrow(Wage)
length(lm_logwage$residuals)
plot(Wage$logwage, lm_logwage$residuals, type = 'p', col = 'red', xlab = 'Wage')
plot(Wage$logwage, lm_logwage$residuals, type = 'p', col = 'red', ylab = 'Wage')
#Análisis descriptivo
#Para comprobar que a cada variable en el dataset le fue asignado el tipo correcto
str(Wage)
#Frequency tables and bar charts
table(Wage$year)
library(ISLR)
library(ggplot2)
#El dataset contiene 11 variables. A continuación una pequeña muestra:
head(Wage)
#Análisis descriptivo
#Para comprobar que a cada variable en el dataset le fue asignado el tipo correcto
str(Wage)
#Frequency tables and bar charts
table(Wage$year)
prop.table(table(Wage$year))
hist(Wage$year)
glimpse(Wage)
library(dplyr)
#El dataset contiene 11 variables. A continuación una pequeña muestra:
head(Wage)
#Análisis descriptivo
#Para comprobar que a cada variable en el dataset le fue asignado el tipo correcto
str(Wage)
glimpse(Wage)
#Frequency tables and bar charts
table(Wage$year)
prop.table(table(Wage$year))
hist(Wage$year)
table(Wage$age)
hist(Wage$age)
barplot(Wage$year)
barplot(Wage$year)
hist(Wage$year)
table(Wage$age)
hist(Wage$age)
table(Wage$maritl)
barplot(table(Wage$maritl))
table(Wage$race)
barplot(table(Wage$race))
table(Wage$education)
barplot(table(Wage$education))
table(Wage$education)
barplot(table(Wage$education))
table(Wage$region)
table(Wage$jobclass)
barplot(Wage$jobclass)
table(Wage$jobclass)
barplot(Wage$jobclass)
barplot(table(Wage$jobclass))
table(Wage$health)
barplot(table(Wage$jobclass))
table(Wage$health)
barplot(table(Wage$jobclass))
table(Wage$education)
barplot(table(Wage$education))
hist(Wage$wage)
table(Wage$wage)
hist(Wage$wage)
#Workers raw wage
hist(Wage$wage)
hist(Wage$logwage)
# Descriptive statistics
summary(Wage)
#rango intercuartilico muetsral RI
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = IQR, na.rm = T)
#varianza
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = var, na.rm = T)
#desviación típica
apply(X = Wage[, numeric_cols], MARGIN = 2, FUN = sd, na.rm = T)
unique(Wage$region) #como existe una sola región lo quitamos porque no nos va a dar mucha información
pairs(Wage[-6], col = 'blue')
pairs(Wage, col = 'blue')
pairs(Wage[, numeric_cols], col = 'blue')
lm_logwage <- lm(logwage ~ age + jobclass + race + health_ins, data=Wage)
lm_logwage
nrow(Wage)
length(lm_logwage$residuals)
logwage
lm_logwage <- lm(logwage ~ age + jobclass + race + health_ins, data=Wage)
lm_logwage
summary(lm_logwage)
plot(Wage$logwage, lm_logwage$residuals, type = 'p', col = 'red', ylab = 'Wage')
summary(lm_logwage)
lm_logwage
summary(lm_logwage)
Wage$race
table(Wage$age)
hist(Wage$age)
summary(Wage)
summary(lm_logwage)
Wage$race
a = ifelse(Wage$race == 2,1, 0)
a
Wage$race[0]
Wage$race[1]
Wage$race[1] == 1
Wage$race[1].level == 1
levels(Wage$race[1])
a = ifelse(Wage$race == 'Black',1, 0)
a
ifelse(Wage$race == "Black",1, 0)
a <- ifelse(Wage$race == "Black",1, 0)
unique(a)
Wage$race
a <- ifelse(Wage$race == "2. Black",1, 0)
a
unique(a)
Wage$ <-is_black <- ifelse(Wage$race == "2. Black",1, 0)
Wage$is_black <- ifelse(Wage$race == "2. Black",1, 0)
View(Wage)
View(Wage)
Wage$race[1]
Wage$is_black[1]
Wage$is_black <- ifelse(Wage$race == "2. Black",1, 0)
lm_logwage_islack <- lm(logwage ~ age + jobclass + is_black + health_ins, data=Wage)
summary(lm_logwage_islack)
lm_logwage_islack <- lm(logwage ~ age + jobclass + is_black + health_ins, data=Wage)
summary(lm_logwage_islack)
lm_logwage <- lm(logwage ~ age + jobclass + race + health_ins, data=Wage)
lm_logwage
lm_logwage_islack <- lm(logwage ~ age + jobclass + is_black + health_ins, data=Wage)
summary(lm_logwage_islack)
lm_logwage <- lm(logwage ~ age + jobclass + race + health_ins, data=Wage)
summary(lm_logwage)
lm_logwage_islack <- lm(logwage ~ age + jobclass + is_black + health_ins, data=Wage)
summary(lm_logwage_islack)
lm_logwage_isblack <- lm(logwage ~ age + jobclass + is_black + health_ins, data=Wage)
summary(lm_logwage_isblack)
lm_logwage_noage <- lm(logwage ~ jobclass + is_black + health_ins, data=Wage)
summary(lm_logwage_islack)
lm_logwage_noage <- lm(logwage ~ jobclass + is_black + health_ins, data=Wage)
summary(lm_logwage_noage)
lm_logwage_noage <- lm(logwage ~ jobclass + race + health_ins, data=Wage)
summary(lm_logwage_noage)
lm_logwage <- lm(logwage ~ age + jobclass + race + health_ins, data=Wage)
summary(lm_logwage)
lm_logwage_isblack <- lm(logwage ~ age + jobclass + is_black + health_ins, data=Wage)
summary(lm_logwage_isblack)
lm_logwage_noage <- lm(logwage ~ jobclass + race + health_ins, data=Wage)
summary(lm_logwage_noage)
lm_logwage_2 <- lm(logwage ~ jobclass + is_black + health_ins, data=Wage)
summary(lm_logwage_2)
lm_logwage <- lm(logwage ~ age + jobclass + race + health_ins, data=Wage)
summary(lm_logwage)
lm_logwage <- lm(logwage ~ age + jobclass + race + health_ins, data=Wage)
summary(lm_logwage)
confint(lm_logwage, level = 0.95) #intervalos de confianza
#plot(Wage$logwage, Wage$Sales, type = 'p', col = 'red', xlab = 'TV', ylab = 'Sales')
#abline(lm_logwage, col = 'blue')
plot(Wage$logwage, lm_logwage$residuals, type = 'p', col = 'red', ylab = 'Wage')
Wage$is_black <- ifelse(Wage$race == "2. Black",1, 0)
lm_logwage_1 <- lm(logwage ~ age + jobclass + is_black + health_ins, data=Wage)
summary(lm_logwage_1)
lm_logwage_2 <- lm(logwage ~ jobclass + race + health_ins, data=Wage)
summary(lm_logwage_2)
lm_logwage_3 <- lm(logwage ~ jobclass + is_black + health_ins, data=Wage)
summary(lm_logwage_3)
plot(hatvalues(lm_logwage_3), col = 'blue')
hatvalues(lm_logwage_3)
hatvalues(lm_logwage_3)
hatvalues(lm_logwage)
plot(hatvalues(lm_logwage))
plot(hatvalues(lm_logwage), col = 'blue')
plot(hatvalues(lm_logwage_3), col = 'blue')
plot(hatvalues(lm_logwage), col = 'blue')
lm_logwage_3 <- lm(logwage ~ age + jobclass + is_black + health_ins, data=Wage)
summary(lm_logwage_3)
plot(hatvalues(lm_logwage_3), col = 'blue')
lm_logwage_3 <- lm(logwage ~ jobclass + is_black + health_ins, data=Wage)
summary(lm_logwage_3)
plot(hatvalues(lm_logwage_3), col = 'blue')
plot(hatvalues(lm_logwage), col = 'blue')
plot(hatvalues(lm_logwage), col = 'blue')
plot(hatvalues(lm_logwage_3), col = 'blue')
lm_logwage_2 <- lm(logwage ~ jobclass + race + health_ins, data=Wage)
summary(lm_logwage_2)
plot(hatvalues(lm_logwage_2), col = 'blue')
plot(hatvalues(lm_logwage), col = 'blue')
plot(hatvalues(lm_logwage_2), col = 'blue')
library(mlbench)
install.packages(mlbench)
install.packages("mlbench")
library(mlbench)
data <- BostonHousing
library(mlbench)
data <- BostonHousing
data(BostonHousing)
data <- data(BostonHousing)
data
data(BostonHousing)
summary(BostonHousing)
head(BostonHousing)
summary(BostonHousing)
exhaustive_model <- regsubsets(medv ~ . - name, data = BostonHousing)
for(i in 1:13){
plot( BostonHousing[,i], BostonHousing$medv, type='p', col='blue', xlab = names(BostonHousing)[i], ylab = 'medv' )
}
library(mlbench)
library(dplyr)
head(BostonHousing)
summary(BostonHousing)
for(i in 1:13){
plot( BostonHousing[,i], BostonHousing$medv, type='p', col='blue', xlab = names(BostonHousing)[i], ylab = 'medv' )
}
library(leaps)
exhaustive_model <- regsubsets(medv ~ . - name, data = BostonHousing)
exhaustive_model <- regsubsets(medv ~ ., data = BostonHousing)
summary(exhaustive_model)
plot(summary(exhaustive_model)$rsq, type = 'l')
summary(exhaustive_model)$adjr2
lm_6 <- lm(medv ~ chas1 + nox + rm + dis + ptratio + last, data = BostonHousing)
summary(lm_6)
lm_6 <- lm(medv ~ chas1 + nox + rm + dis + ptratio + last, data = BostonHousing)
lm_6 <- lm(medv ~ chas1 + nox + rm + dis + ptratio + last, data = BostonHousing)
library(mlbench)
library(dplyr)
library(leaps)
head(BostonHousing)
summary(BostonHousing)
for(i in 1:13){
plot( BostonHousing[,i], BostonHousing$medv, type='p', col='blue', xlab = names(BostonHousing)[i], ylab = 'medv' )
}
exhaustive_model <- regsubsets(medv ~ ., data = BostonHousing)
summary(exhaustive_model)
plot(summary(exhaustive_model)$rsq, type = 'l')
summary(exhaustive_model)$adjr2
lm_6 <- lm(medv ~ chas1 + nox + rm + dis + ptratio + last, data = BostonHousing)
lm_6 <- lm(medv ~ chas1 + nox + rm + dis + ptratio + last, data = BostonHousing)
summary(BostonHousing)
lm_6 <- lm(medv ~ chas + nox + rm + dis + ptratio + last, data = BostonHousing)
lm_6 <- lm(medv ~ chas + nox + rm + dis + ptratio + lstat, data = BostonHousing)
summary(lm_6)
summary(exhaustive_model)$adjr2
lm_6 <- lm(medv ~ chas + nox + rm + dis + ptratio, data = BostonHousing)
summary(lm_6)
lm_6 <- lm(medv ~ chas + nox + rm + dis + ptratio + lstat, data = BostonHousing)
summary(lm_6)
library(leaps)
exhaustive_model <- regsubsets(logwage ~ . - wage, data = BostonHousing)
exhaustive_model <- regsubsets(logwage ~ . - wage, data = Wage)
summary(exhaustive_model)
exhaustive_model <- regsubsets(logwage ~ age + jobclass + race + health_ins. - wage, data = Wage)
exhaustive_model <- regsubsets(logwage ~ age + jobclass + race + health_ins - wage, data = Wage)
summary(exhaustive_model)
plot(summary(exhaustive_model)$rsq, type = 'l')
summary(exhaustive_model)$adjr2
lm_logwage <- lm(logwage ~ age + jobclass + race + health_ins, data=Wage)
summary(lm_logwage)
